
package elm;

/**
 *
 * @author Kai
 */

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
 
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

public class ManualInput extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public ManualInput() {
        Globals.Status =" ";
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        IDLabel = new javax.swing.JLabel();
        SenderLabel = new javax.swing.JLabel();
        TypeLabel = new javax.swing.JLabel();
        BodyLabel = new javax.swing.JLabel();
        SaveBtn = new java.awt.Button();
        SenderLbl = new javax.swing.JTextField();
        IDlbl = new javax.swing.JTextField();
        SubjectLbl = new javax.swing.JLabel();
        SubjectField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        backBtn1 = new java.awt.Button();
        StatusLbl = new javax.swing.JLabel();
        prefix = new javax.swing.JLabel();
        BodyField = new java.awt.TextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Title.setText(Globals.title);

        IDLabel.setText("Message ID");

        SenderLabel.setText("Sender");

        TypeLabel.setText("Type: "+Globals.type);

        BodyLabel.setText("Message Body:");

        SaveBtn.setActionCommand("Save");
        SaveBtn.setLabel("Save");
        SaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveBtnActionPerformed(evt);
            }
        });

        SenderLbl.setText("Enter Sender");
        SenderLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SenderLblMouseClicked(evt);
            }
        });

        IDlbl.setText("Enter Message ID");
        IDlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IDlblMouseClicked(evt);
            }
        });

        SubjectLbl.setText("Subject");

        SubjectField.setText("Enter Subject");
        SubjectField.setEnabled(false);
        SubjectField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SubjectFieldMouseClicked(evt);
            }
        });

        jLabel1.setText("Manual input required");

        backBtn1.setActionCommand("Back");
        backBtn1.setLabel("Back");
        backBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtn1ActionPerformed(evt);
            }
        });

        StatusLbl.setText(Globals.Status);

        prefix.setText(Globals.prefix);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BodyField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(BodyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(109, 109, 109)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(StatusLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(59, 59, 59)
                        .addComponent(SaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(backBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(IDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SenderLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(prefix)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(IDlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SenderLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SubjectField, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(SubjectLbl)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(IDLabel)
                                    .addComponent(IDlbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(TypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(3, 3, 3)))
                        .addComponent(SenderLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SenderLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prefix))))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SubjectLbl)
                    .addComponent(SubjectField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BodyLabel)
                    .addComponent(jLabel1))
                .addGap(16, 16, 16)
                .addComponent(BodyField, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backBtn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SaveBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(StatusLbl)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        Globals.body = BodyField.getText();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveBtnActionPerformed
                
        
                JSONObject obj = new JSONObject();
		obj.put("Message ID: ", Globals.Filename);
		obj.put("Sender: ", Globals.sender);
                if(Globals.subject != null)
                {
                obj.put("Subject: ", Globals.subject);
                }
                Globals.body = BodyField.getText();
                obj.put("Message: ", Globals.body);
 
		// try-with-resources statement based on post comment below :)
		try (FileWriter file = new FileWriter("src/assets/"+Globals.Filename+".json")) {
			file.write(obj.toJSONString());
			StatusLbl.setText("Successfully Copied JSON Object to File...");
//			StatusLbl.setText("\nJSON Object: " + obj);
                } catch (IOException ex) {
            Logger.getLogger(ManualInput.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SaveBtnActionPerformed

    private void backBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtn1ActionPerformed
        dispose();
    }//GEN-LAST:event_backBtn1ActionPerformed
    
    private void IDlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IDlblMouseClicked
        IDlbl.setText("");
        
        IDlbl.addKeyListener(new KeyAdapter() {
            
    public void keyTyped(KeyEvent e) { 
        
        if(IDlbl.getText().length() > 9)
        {
            e.consume();
        }
        
        else if ((IDlbl.getText().length() > 0) && (IDlbl.getText().length() <= 10)) // limit textfield to 10 characters max and must have more than 0
                {
                    String ID = IDlbl.getText(); 
                    
                    
                    if(ID.contains("s") || ID.contains("S")) // determines whether ID is a sms, tweet, email or SIR
                            {
                                Globals.type = "SMS - text";
                                TypeLabel.setText(Globals.type);
                                Globals.Filename = ID;
                            }
                    else if(ID.contains("e") || ID.contains("E"))
                            {   
                                SubjectField.setEnabled(true);
                                Globals.type = "Email";
                                TypeLabel.setText(Globals.type);
                                Globals.Filename = ID;
                                
                            }
                    else if(ID.contains("T") || ID.contains("t"))
                            {
                                Globals.type = "Tweet";
                                TypeLabel.setText(Globals.type);
                                Globals.Filename = ID;
                            }
                    else if(ID.contains("I") || ID.contains("i"))
                            {
                                Globals.type = "Significant Incident Report";
                                TypeLabel.setText(Globals.type);
                                Globals.Filename = ID;
                            }
                    else
                    {
                       Globals.Status = "ID must be less than 10 characters or incorrect format used";
                       StatusLbl.setText(Globals.Status); 
                    }
                }
    }  
});
    }//GEN-LAST:event_IDlblMouseClicked

    private void SenderLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SenderLblMouseClicked
        SenderLbl.setText("");
        
        SenderLbl.addKeyListener(new KeyAdapter()
        {
            
            public void keyTyped(KeyEvent e) 
        { 


                String ID = SenderLbl.getText(); //get user input in Sender field and stores inS tring ID

        //***************** SMS - Text ************************************************** 

               if(Globals.type.matches("SMS - text")) // matches string to what is stored in Global type
                {        
                    if(SenderLbl.getText().length() > 10)
                    {
                        e.consume();
                    }

                    Globals.prefix="+44";               
                    prefix.setText(Globals.prefix);         // sets prefix for SMS type of message
                    Globals.sender = SenderLbl.getText();  //stores input from Sender Field in Global variable called sender

                }

        //***************** Tweets ************************************************** 

                else if(Globals.type.matches("Tweet"))
                {

                    Globals.prefix="@";
                    prefix.setText(Globals.prefix);

                    if(SenderLbl.getText().length() > 14)
                    {
                        e.consume();
                    }
                }

        //***************** Emails ************************************************** 

                else if(Globals.type.matches("Email"))
                {
                   if(SenderLbl.getText().length() <50)
                   {
                    if( (ID.matches("(?i).*@.*") && (ID.matches("."))))
                   {
                       Globals.sender = SenderLbl.getText();
                   }
                      else
                   {
                    Globals.Status = "Sender field must contain email address";
                   StatusLbl.setText(Globals.Status);    
                    }
                   }
                }
                else 
                {
                  Globals.Status = "Sender must be filled in correctly";
                   StatusLbl.setText(Globals.Status);  
                }
        }//closes key event
        });// closes keyadapter
    }//GEN-LAST:event_SenderLblMouseClicked

    private void SubjectFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SubjectFieldMouseClicked
               SubjectField.setText("");
        
    SubjectField.addKeyListener(new KeyAdapter() {
            
    public void keyTyped(KeyEvent e) { 
        
        if(SubjectField.getText().length() <=20)
        {
         Globals.subject = SubjectField.getText();
        
        }
        else
        {
           e.consume();
        }
    }
    }); 
    }//GEN-LAST:event_SubjectFieldMouseClicked

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManualInput().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.TextArea BodyField;
    private javax.swing.JLabel BodyLabel;
    private javax.swing.JLabel IDLabel;
    private javax.swing.JTextField IDlbl;
    private java.awt.Button SaveBtn;
    private javax.swing.JLabel SenderLabel;
    private javax.swing.JTextField SenderLbl;
    private javax.swing.JLabel StatusLbl;
    private javax.swing.JTextField SubjectField;
    private javax.swing.JLabel SubjectLbl;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel TypeLabel;
    private java.awt.Button backBtn1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel prefix;
    // End of variables declaration//GEN-END:variables
}
